Note: this is no longer a TODO, since essentially everything has been done as
of Miosix 1.58. Only kept for historic reasons.
=============================================================================

While using certain C++ features exception support and its code size overhead
might be linked with the application code even if -fno-exceptions was passed to
gcc. The easy solution is to compile gcc/libstdc++ by explicitly disabling
exception.
However this is unconvenient as the choice to use exceptions or not should
be available when compiling a program, not fixed when compiling the compiler.

This is a list of source files within libsupc++ that contain functions
that throw exceptions.

- new_op.cc and other files with the various versions of operator new
  operator new : throws std::bad_alloc if no memory available
  FIXED

- pure.cc
  extern "C" void __cxa_pure_virtual()
  does not trow anything but calls std::terminate() that contains a try..catch
  FIXED

- guard.cc
  extern "C" void cxa_guard_acquire(__guard *g) : throws
      __gnu_cxx::recursive_init_error
  FIXED

- eh_aux_runtime.cc
  extern "C" void __cxa_bad_cast() : throws std::bad_cast
  extern "C" void __cxa_bad_typeid() : throws std::bad_typeid
  NOTE: It is useless to fix this given that dynamic_cast requires rtti support